import java.util.ArrayList;
import java.util.Collections;
public class Main {
    public static void main(String[] args) {
        ArrayList<Integer> tab1 = new ArrayList<>();
        ArrayList<Integer> tab2 = new ArrayList<>();
        tab1.add(5);
        tab1.add(3);
        tab1.add(1);
        tab1.add(1);
        tab2.add(2);
        tab2.add(10);
        tab2.add(7);
        System.out.println("Zadanie 1:");
        System.out.println("Lista 1: " + tab1);
        System.out.println("Lista 2: " + tab2);
        System.out.println("Lista: " + append(tab1, tab2));
        System.out.println("Zadanie 2:");
        System.out.println("Lista 1: " + tab1);
        System.out.println("Lista 2: " + tab2);
        System.out.println("Lista: " + merge(tab1, tab2));
        System.out.println("Zadanie 3:");
        System.out.println("Lista 1: " + tab1);
        System.out.println("Lista 2: " + tab2);
        System.out.println("Lista: " + mergeSorted(tab1, tab2));
        System.out.println("Zadanie 4:");
        String napis = "kajak";
        System.out.println("String: " + napis);
        ArrayList<String> napis_sort = toArrayList(napis);
        System.out.println("Posortowany string: " + napis_sort);
        int liczba = 1989;
        System.out.println("Liczba: " + liczba);
        ArrayList<Integer> liczba_sort = toArrayList(liczba);
        System.out.println("Posortowana liczba: " + liczba_sort);
        System.out.println("Zadanie 5:");
        System.out.println("checkChar: " + checkChar(napis_sort, 'k'));
        System.out.println("checkDigit: " + checkDigit(liczba_sort, 9));
        System.out.println("Zadanie 6:");
        System.out.println("countChar: " + countChar(napis_sort, 'k'));
        System.out.println("countDigit: " + countDigit(liczba_sort, 9));
        System.out.println("Zadanie 7:");
        ArrayList<Integer> lista_liczb = new ArrayList<>();
        lista_liczb.add(1);
        lista_liczb.add(4);
        lista_liczb.add(5);
        lista_liczb.add(5);
        lista_liczb.add(7);
        lista_liczb.add(7);
        ArrayList<String> lista_wyrazow = new ArrayList<>();
        lista_wyrazow.add("apple");
        lista_wyrazow.add("banana");
        lista_wyrazow.add("apple");
        lista_wyrazow.add("orange");
        System.out.println(uniqueArrayList(lista_wyrazow, 0));
        System.out.println(uniqueArrayList(lista_liczb));
        System.out.println("Zadanie 8:");
        System.out.println(countArrayList(lista_wyrazow, 0));
        System.out.println(countArrayList(lista_liczb));
    }
    public static ArrayList<Integer> append(ArrayList<Integer> tab1, ArrayList<Integer> tab2){
        ArrayList<Integer> tab3 = new ArrayList<>();
        tab1.addAll(tab2);
        tab3.addAll(tab1);
        return tab3;
    }
    public static ArrayList<Integer> merge(ArrayList<Integer> tab1, ArrayList<Integer> tab2){
        ArrayList<Integer> tab3 = new ArrayList<>();
        for (int i = 0; i < tab1.size() || i < tab2.size(); i++) {
            if(i < tab1.size()){
                tab3.add(tab1.get(i));
            }
            if(i < tab2.size()){
                tab3.add(tab2.get(i));
            }
        }
        return tab3;
    }
    public static ArrayList<Integer> mergeSorted(ArrayList<Integer> tab1, ArrayList<Integer> tab2){
        Collections.sort(tab1);
        Collections.sort(tab2);
        ArrayList<Integer> tab3 = merge(tab1, tab2);
        return tab3;
    }
    public static ArrayList<String> toArrayList(String napis){
        ArrayList<String> lista = new ArrayList<>();
        for (int i = 0; i < napis.length(); i++) {
            lista.add(napis.charAt(i) + "");
        }
        Collections.sort(lista);
        return lista;
    }
    public static ArrayList<Integer> toArrayList(int liczba){
        ArrayList<Integer> lista = new ArrayList<>();
        int zm;
        while (liczba > 0) {
            zm = liczba % 10;
            lista.add(zm);
            liczba /= 10;
        }
        Collections.sort(lista);
        return lista;
    }
    public static Boolean checkChar(ArrayList<String> tab, char znak){
        for (String element : tab) {
            for (int i = 0; i < element.length(); i++) {
                if (element.charAt(i) == znak) {
                    return true;
                }
            }
        }
        return false;
    }
    public static Boolean checkDigit(ArrayList<Integer> tab, int cyfra){
        for (int i = 0; i < tab.size(); i++) {
            if(tab.get(i) == cyfra){
                return true;
            }
        }
        return false;
    }
    public static int countChar(ArrayList<String> tab, char znak){
        int ile = 0;
        for (String element : tab) {
            for (int i = 0; i < element.length(); i++) {
                if (element.charAt(i) == znak) {
                    ile++;
                }
            }
        }
        return ile;
    }
    public static int countDigit(ArrayList<Integer> tab, int cyfra){
        int ile = 0;
        for (int i = 0; i < tab.size(); i++) {
            if(tab.get(i) == cyfra){
                ile++;
            }
        }
        return ile;
    }
    public static ArrayList<ArrayList<String>> uniqueArrayList(ArrayList<String> tab, int k){
        ArrayList<ArrayList<String>> wynik = new ArrayList<>();
        for(int i = 0; i < tab.size(); i++){
            boolean unikalna = true;
            for(int j = 0; j < i; j++){
                if (tab.get(i).equals(tab.get(j))) {
                    unikalna = false;
                    break;
                }
            }
            if(unikalna){
                ArrayList<String> para = new ArrayList<>();
                para.add(tab.get(i));
                para.add("0");
                wynik.add(para);
            }
        }
        return wynik;
    }
    public static ArrayList<ArrayList<Integer>> uniqueArrayList(ArrayList<Integer> tab){
        ArrayList<ArrayList<Integer>> wynik = new ArrayList<>();
        for(int i = 0; i < tab.size(); i++){
            boolean unikalna = true;
            for(int j = 0; j < i; j++){
                if (tab.get(i).equals(tab.get(j))) {
                    unikalna = false;
                    break;
                }
            }
            if(unikalna){
                ArrayList<Integer> para = new ArrayList<>();
                para.add(tab.get(i));
                para.add(0);
                wynik.add(para);
            }
        }
        return wynik;
    }
    public static ArrayList<ArrayList<String>> countArrayList(ArrayList<String> tab, int k){
        ArrayList<ArrayList<String>> wynik = new ArrayList<>();
        for(int i = 0; i < tab.size(); i++){
            boolean unikalna = true;
            for(int j = 0; j < i; j++){
                if (tab.get(i).equals(tab.get(j))) {
                    unikalna = false;
                    break;
                }
            }
            if(unikalna) {
                int ile = 0;
                for (int j = 0; j < tab.size(); j++) {
                    if (tab.get(i).equals(tab.get(j))) {
                        ile++;
                    }
                }
                ArrayList<String> para = new ArrayList<>();
                para.add(tab.get(i));
                para.add(ile + "");
                wynik.add(para);
            }
        }
        return wynik;
    }
    public static ArrayList<ArrayList<Integer>> countArrayList(ArrayList<Integer> tab){
        ArrayList<ArrayList<Integer>> wynik = new ArrayList<>();
        for(int i = 0; i < tab.size(); i++){
            boolean unikalna = true;
            for(int j = 0; j < i; j++){
                if (tab.get(i).equals(tab.get(j))) {
                    unikalna = false;
                    break;
                }
            }
            if(unikalna) {
                int ile = 0;
                for (int j = 0; j < tab.size(); j++) {
                    if (tab.get(i).equals(tab.get(j))) {
                        ile++;
                    }
                }
                ArrayList<Integer> para = new ArrayList<>();
                para.add(tab.get(i));
                para.add(ile);
                wynik.add(para);
            }
        }
        return wynik;
    }
}
